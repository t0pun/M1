
package web.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HotelWebService", targetNamespace = "http://service.web/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HotelWebService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNom", targetNamespace = "http://service.web/", className = "web.service.GetNom")
    @ResponseWrapper(localName = "getNomResponse", targetNamespace = "http://service.web/", className = "web.service.GetNomResponse")
    @Action(input = "http://service.web/HotelWebService/getNomRequest", output = "http://service.web/HotelWebService/getNomResponse")
    public String getNom();

    /**
     * 
     * @return
     *     returns web.service.Adresse
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAdresse", targetNamespace = "http://service.web/", className = "web.service.GetAdresse")
    @ResponseWrapper(localName = "getAdresseResponse", targetNamespace = "http://service.web/", className = "web.service.GetAdresseResponse")
    @Action(input = "http://service.web/HotelWebService/getAdresseRequest", output = "http://service.web/HotelWebService/getAdresseResponse")
    public Adresse getAdresse();

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<web.service.Chambre>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chambreDisponible", targetNamespace = "http://service.web/", className = "web.service.ChambreDisponible")
    @ResponseWrapper(localName = "chambreDisponibleResponse", targetNamespace = "http://service.web/", className = "web.service.ChambreDisponibleResponse")
    @Action(input = "http://service.web/HotelWebService/chambreDisponibleRequest", output = "http://service.web/HotelWebService/chambreDisponibleResponse")
    public List<Chambre> chambreDisponible(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reserver", targetNamespace = "http://service.web/", className = "web.service.Reserver")
    @ResponseWrapper(localName = "reserverResponse", targetNamespace = "http://service.web/", className = "web.service.ReserverResponse")
    @Action(input = "http://service.web/HotelWebService/reserverRequest", output = "http://service.web/HotelWebService/reserverResponse")
    public int reserver(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Client arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addReservation", targetNamespace = "http://service.web/", className = "web.service.AddReservation")
    @ResponseWrapper(localName = "addReservationResponse", targetNamespace = "http://service.web/", className = "web.service.AddReservationResponse")
    @Action(input = "http://service.web/HotelWebService/addReservationRequest", output = "http://service.web/HotelWebService/addReservationResponse")
    public void addReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        Reservation arg0);

    /**
     * 
     * @return
     *     returns java.util.List<web.service.Chambre>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getChambres", targetNamespace = "http://service.web/", className = "web.service.GetChambres")
    @ResponseWrapper(localName = "getChambresResponse", targetNamespace = "http://service.web/", className = "web.service.GetChambresResponse")
    @Action(input = "http://service.web/HotelWebService/getChambresRequest", output = "http://service.web/HotelWebService/getChambresResponse")
    public List<Chambre> getChambres();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtoiles", targetNamespace = "http://service.web/", className = "web.service.GetEtoiles")
    @ResponseWrapper(localName = "getEtoilesResponse", targetNamespace = "http://service.web/", className = "web.service.GetEtoilesResponse")
    @Action(input = "http://service.web/HotelWebService/getEtoilesRequest", output = "http://service.web/HotelWebService/getEtoilesResponse")
    public int getEtoiles();

    /**
     * 
     * @return
     *     returns web.service.Hotel
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHotel", targetNamespace = "http://service.web/", className = "web.service.GetHotel")
    @ResponseWrapper(localName = "getHotelResponse", targetNamespace = "http://service.web/", className = "web.service.GetHotelResponse")
    @Action(input = "http://service.web/HotelWebService/getHotelRequest", output = "http://service.web/HotelWebService/getHotelResponse")
    public Hotel getHotel();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "chambreToString", targetNamespace = "http://service.web/", className = "web.service.ChambreToString")
    @ResponseWrapper(localName = "chambreToStringResponse", targetNamespace = "http://service.web/", className = "web.service.ChambreToStringResponse")
    @Action(input = "http://service.web/HotelWebService/chambreToStringRequest", output = "http://service.web/HotelWebService/chambreToStringResponse")
    public String chambreToString(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
